// Задание №1. Проверка на пустоту
// Напишите функцию isEmpty(obj), которая возвращает true, если у объекта нет свойств, 
// иначе false.

let obj = {}

const isEmpty = (obj) => {
    for (const item in obj) {
        return false
    }
    return true
}
console.log(isEmpty());
// ----------------------------------------------------------------------------------------------
// Задание №2. Умножаем все числовые свойства на 2
// Создайте функцию multiplyNumeric(obj), которая умножает все числовые свойства 
// объекта obj на 2.
// Обратите внимание, что multiplyNumeric не нужно ничего возвращать. Следует 
// напрямую изменять объект.
// P.S. Используйте typeof для проверки, что значение свойства числовое.
let obj2 ={
    apples: 6,
    grapes: "good",
    bread: 4,
    cheese: 7,
  }

const multiplyNumeric = (obj2) => {
   for (const key in obj2) {
       if (typeof obj2[key] == 'number') {
           obj2[key] *=2
       }
   }
}

console.log(multiplyNumeric(obj2));

// --------------------------------------------------------------------------------------------
// Задание №3. Ввод числового значения
// Создайте функцию readNumber, которая будет запрашивать ввод числового значения 
// до тех пор, пока посетитель его не введёт.
// а должна возвращать числовое значение.
// Также надо разрешить пользователю остановить процесс ввода, отправив пустую 
// строку или нажав «Отмена». В этом случае функция должна вернуть null. 

const readNumber = () => {
    let number;
    do {
    number = +prompt('Введите число');
    } while (!isFinite(number));
    if(number == '' || number == null) {
        return null
    }
    return number
}

// console.log(readNumber());

// ----------------------------------------------------------------------------------------------
// Задание №4. Случайное число от min до max
// Встроенный метод Math.random() возвращает случайное число от 0 (включительно) до 
// 1 (но не включая 1)
// Напишите функцию random(min, max), которая генерирует случайное число с 
// плавающей точкой от min до max (но не включая max).
// Пример работы функции:
// alert( random(1, 5) ); // 1.2345623452
// alert( random(1, 5) ); // 3.7894332423
// alert( random(1, 5) ); // 4.3435234525

const random = (min, max) => min + Math.random() * (max-min)
// alert( random(1, 5) ); 

// -----------------------------------------------------------------------------------------------
// Задание №5. Случайное целое число от min до max
// Напишите функцию randomInteger(min, max), которая генерирует случайное целое 
// (integer) число от min до max (включительно).
// Любое число из интервала min..max должно появляться с одинаковой вероятностью.
// Пример работы функции:
// alert( randomInteger(1, 5) ); // 1
// alert( randomInteger(1, 5) ); // 3
// alert( randomInteger(1, 5) ); // 5

const randomInteger = (min, max) => Math.floor(min + Math.random() * (max + 1 - min))
// alert( randomInteger(1, 5) ); // 1

// ------------------------------------------------------------------------------------------------
// Задание №6. Сделать первый символ заглавным
// Напишите функцию ucFirst(str), возвращающую строку str с заглавным первым 
// символом. 
// Например:
// ucFirst("вася") == "Вася";

const ucFirst = (str) => str.charAt(0).toUpperCase() + str.slice(1);

console.log(ucFirst("вася"));

// --------------------------------------------------------------------------------------------------
// Задание №7. Проверка на спам
// Напишите функцию checkSpam(str), возвращающую true, если str содержит 'viagra' или 
// 'XXX', а иначе false.
// Функция должна быть нечувствительна к регистру:
// checkSpam('buy ViAgRA now') == true
// checkSpam('free xxxxx') == true
// checkSpam("innocent rabbit") == false

const checkSpam = (str) => str.toLowerCase().includes('viagra') || str.toUpperCase().includes('XXX');

console.log(checkSpam('buy ViAgRA now'));
console.log(checkSpam('free xxxxx'));
console.log(checkSpam("innocent rabbit"));

// ----------------------------------------------------------------------------------------------------
// Задание №8. Усечение строки
// Создайте функцию truncate(str, maxlength), которая проверяет длину строки str и, если 
// она превосходит maxlength, заменяет конец str на "…", так, чтобы её длина стала равна 
// maxlength.
// Результатом функции должна быть та же строка, если усечение не требуется, либо, 
// если необходимо, усечённая строка.
// Например:
// truncate("Вот, что мне хотелось бы сказать на эту тему:", 20) = "Вот, что мне 
// хотело…"
// truncate("Всем привет!", 20) = "Всем привет!"

function truncate (str, maxLength) {
    if (str.length < maxLength) {
    return str;  
    }
    return str.slice(0, maxLength) + '...';
  }
  
  console.log(truncate("Вот, что мне хотелось бы сказать на эту тему:", 20));

// -------------------------------------------------------------------------------------------------------
// Задание №9. Выделить число
// Есть стоимость в виде строки "$120". То есть сначала идёт знак валюты, а затем –
// число.
// Создайте функцию extractCurrencyValue(str), которая будет из такой строки выделять 
// числовое значение и возвращать его.
// Например:alert( extractCurrencyValue('$120') === 120 ); // true

const extractCurrencyValue = (str) => +str.slice(1)

console.log(extractCurrencyValue('$120'));

// ---------------------------------------------------------------------------------------------------------
// Задание №10. Сумма введённых чисел
// Напишите функцию sumInput(), которая:
// • Просит пользователя ввести значения, используя prompt и сохраняет их в 
// массив.
// • Заканчивает запрашивать значения, когда пользователь введёт не числовое 
// значение, пустую строку или нажмёт «Отмена».
// • Подсчитывает и возвращает сумму элементов массива.
// • P.S. Ноль 0 – считается числом, не останавливайте ввод значений при вводе «0».

const sumInput = () => {
    let numberArr=[];

     while (true){
       let number = prompt('Введите число');
        if(!isFinite(number) || number == '' || number == null) break;
    numberArr.push(+number);
}
    return numberArr.reduce((a, b) => a + b, 0);
}

// console.log(sumInput())

// -----------------------------------------------------------------------------------------------------------
// Задание №11. Подмассив наибольшей суммы
// На входе массив чисел, например: arr = [1, -2, 3, 4, -9, 6].
// Задача: найти непрерывный подмассив в arr, сумма элементов в котором максимальна.
// Функция getMaxSubSum(arr) должна возвращать эту сумму.
// Например: 
// getMaxSubSum([-1, 2, 3, -9]) = 5 (сумма выделенных)
// getMaxSubSum([2, -1, 2, 3, -9]) = 6
// getMaxSubSum([-1, 2, 3, -9, 11]) = 11
// getMaxSubSum([-2, -1, 1, 2]) = 3
// getMaxSubSum([100, -9, 2, -3, 5]) = 100
// getMaxSubSum([1, 2, 3]) = 6 (берём все)
// Если все элементы отрицательные – ничего не берём(подмассив пустой) и сумма равна 
// «0»:
// getMaxSubSum([-1, -2, -3]) = 0
// Попробуйте придумать быстрое решение: O(n2), а лучше за О(n) операций.
const getMaxSubSum = (arr) => {
    let max = 0;
    let subarray = 0;
    arr.map(item => {
        subarray+=item;
        max = Math.max(max,subarray);
        if(subarray < 0 ) {
            subarray = 0;
        };
    });
    return max;
}

console.log(getMaxSubSum([-2, -1, 1, 2])); // 3
console.log(getMaxSubSum([100, -9, 2, -3, 5])); // 100
console.log(getMaxSubSum([1, 2, 3])); //6
// --------------------------------------------------------------------------------------------------------------
// Задание №12. Обязателен ли "else"?
// Следующая функция возвращает true, если параметр age больше 18.
// В ином случае она запрашивает подтверждение через confirm и возвращает его 
// результат:
// function checkAge(age) { if (age > 18) {
//  return true;
//  } else {
//  // ...
//  return confirm('Родители разрешили?');
//  }
// }
// Будет ли эта функция работать как-то иначе, если убрать else?
// function checkAge(age) {
//  if (age > 18) {
//  return true;
//  }
//  // ...
//  return confirm('Родители разрешили?');
// }
// Есть ли хоть одно отличие в поведении этого варианта?

// Ответ: Оба варианта сработают одинаково, можно вывести результат в else, можно после проверки условия в данных ситуациях

// ----------------------------------------------------------------------------------------------------------------
// Задание №13. Перепишите функцию, используя оператор '?' или '||'
// Следующая функция возвращает true, если параметр age больше 18.
// В ином случае она задаёт вопрос confirm и возвращает его результат.
// function checkAge(age) {
//  if (age > 18) {
//  return true;
//  } else {
//  return confirm('Родители разрешили?');
//  }
// }
// Перепишите функцию, чтобы она делала то же самое, но без if, в одну строку.
// Сделайте два варианта функции checkAge:
// Используя оператор ? Используя оператор ||

const checkAge = (age) => (age > 18) ? true : confirm('Родители разрешили?');
const checkAge2 = (age) => (age > 18) || confirm('Родители разрешили?');

// ------------------------------------------------------------------------------------------------------------------
// Задание №14. Функция min(a, b)
// Напишите функцию min(a,b), которая возвращает меньшее из чисел a и b.
// Пример вызовов:
// min(2, 5) == 2
// min(3, -1) == -1
// min(1, 1) == 1

const min = (a,b) => a < b ? console.log('Меньшее число: ', a) : console.log('Меньшее число: ', b);
// -------------------------------------------------------------------------------------------------------------------
// Задание №15. Функция pow(x,n)
// Напишите функцию pow(x,n), которая возвращает x в степени n. Иначе говоря, 
// умножает x на себя n раз и возвращает результат.
// pow(3, 2) = 3 * 3 = 9
// pow(3, 3) = 3 * 3 * 3 = 27
// pow(1, 100) = 1 * 1 * ...* 1 = 1
// Создайте страницу, которая запрашивает x и n, а затем выводит результат pow(x,n).
// Запустить демо
// P.S. В этой задаче функция обязана поддерживать только натуральные значения n, т.е. 
// целые от 1 и выше.

// let x = +prompt('Введите число');
// let n = +prompt('Введите степень (натуральное число)');
const pow = (x,n) => {
    if(n/1 && n/n){
     alert(x**n)
    } else {
     alert('Вы ввели ненатуральное число')
    }
    };
console.log(pow(x,n));

// -------------------------------------------------------------------------------------------------------------------
// Задание №16. Перепишите с использованием функции-стрелки
// Замените код Function Expression стрелочной функцией:

// const ask = (question, yes, no) => {
//  if (confirm(question)) yes()
//  else no();
// }
// ask(
//  "Вы согласны?",
//  () => alert("Вы согласились."),
//  () => alert("Вы отменили выполнение."));

// --------------------------------------------------------------------------------------------------------------------
// );Задание №17. Робинзон Крузо
// Ваш месячный доход - 3333 попугая. Вы хотите купить пальму за 8000
// попугаев. Вычислите, за какой промежуток времени вы насобираете на
// пальму, при условии что ваши ежемесячные расходы составляют 1750
// попугаев.
const salary = 3333;
const spend = 1750;
const palma = 8000;

const palm = (sal, sp, pal) => Math.floor(pal/(sal-sp));
console.log(`За ${palm(salary, spend, palma)} месяцев я насобираю на пальму`);
// ---------------------------------------------------------------------------------------------------------------------
// Задание №18. Вопросы пользователю
// 1. Спросить у пользователя 10 чисел
// 2. Если число
// - положительное —> ничего не делать
// - отрицательная —> получить их сумму
// 3. Вывести сумму отрицательных чисел, которые ввел пользователь
// ВАЖНО: по условиям задачи в вашем коде должен быть только 1 prompt и
// только 1 цикл fo
let arr = [];

const cycle = (n) => {
    for (let i = 0; i < n; i++) {
    let numbers = +prompt("Введите отрицательное число");
    if(!isFinite(numbers) || numbers == '' || numbers == null) break;
    arr.push(numbers);
    }
      
}

const numbers = (sum,n) => {
    cycle(n);

    isNegativeNumb = arr.some(num => num < 0);
    if(isNegativeNumb){
    return sum = arr.filter(num => num < 0).reduce((a,b) => a + b, 0);
    }
  return;
}

// console.log(numbers(0,10));